class r{_routes={};constructor(t={}){this._routes=t,this.listen()}add(t,e){return this._routes[t]=e,this}remove(t){delete this._routes[t]}route(t,e){try{this._routes[t||"/"](e||{})}catch(s){this._routes["/"](e||{error:`route not found ${t}`})}}list(){return this._routes}static params(t){return t?JSON.parse('{"'+t.replace(/&/g,'","').replace(/=/g,'":"')+'"}',function(e,s){return e===""?s:decodeURIComponent(s)}):{}}listen(){const t=this;try{const e=location.hash.slice(1).toLowerCase().split("?")||"/";t.route(e[0],e[1]),window.addEventListener("hashchange",function(){const s=location.hash.slice(1).toLowerCase().split("?")||"/";t.route(s[0],s[1])})}catch(e){this.route("/",{error:e.message})}}}export default r;
//# sourceMappingURL=routes.min.js.map
