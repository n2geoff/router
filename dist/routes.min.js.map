{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["/*! Routes v2.0.0 | MIT | https://github.com/n2geoff/routes */\nclass Routes {\n    constructor(opts = {}) {\n        this.routes  = opts.routes || {};\n        this._routes = [];\n    }\n\n    // build dynamic routes\n    build() {\n        // https://stackoverflow.com/questions/37737499/simple-javascript-url-routing-regex\n        return Object.keys(this.routes)\n            .sort((a,b) => b.length - a.length)\n            .map((path) => {\n                return {\n                    path: new RegExp(\"^\" + path.replace(/:[^\\s/]+/g, \"([\\\\w-]+)\") + \"$\"),\n                    cb: this.routes[path]\n                };\n            });\n    }\n\n    static params(q) {\n        // https://stackoverflow.com/questions/8648892/how-to-convert-url-parameters-to-a-javascript-object\n        return q\n            ? JSON.parse(\"{\\\"\" + q.replace(/&/g, \"\\\",\\\"\").replace(/=/g, \"\\\":\\\"\") + \"\\\"}\", function (key, value) { return key === \"\" ? value : decodeURIComponent(value);})\n            : {};\n    }\n\n    add(route, cb) {\n        this.routes[route] = cb;\n    }\n\n    remove(route) {\n        delete this.routes[route];\n    }\n\n    clean(link) {\n        // remove root\n        const cleaned = link.replace(\"#\", \"\").split(\"?\")[0].trim();\n\n        // get query string\n        const qs = Routes.params(link.split(\"?\")[1]);\n\n        // remove trailing slash\n        if (cleaned.length > 1 && cleaned.endsWith(\"/\")) {\n            return [cleaned.slice(0, -1), qs];\n        }\n\n        return [cleaned, qs];\n    }\n\n    route(link) {\n        // clean route link\n        link = this.clean(link || window.location.hash);\n        const goto = link[0];\n        const qs   = link[1];\n\n        // return early\n        if (!goto.startsWith(\"/\")) return;\n\n        // loop through all routes, longest first\n        for (let i = 0, l = this._routes.length; i < l; i++) {\n            // parse if possible\n            const found = goto.match(this._routes[i].path) || false;\n\n            if (found) {\n                return this._routes[i].cb(found.slice(1), qs);\n            }\n        }\n\n        return false;\n    }\n\n    start() {\n        // build routes object\n        this._routes = this.build();\n\n        window.addEventListener(\"hashchange\", (e) => {\n            e.preventDefault();\n            return this.route();\n        });\n\n        // current route\n        this.route();\n    }\n}\n\nexport default Routes;\n"],
  "mappings": "AAAA,8DACA,MAAMA,CAAO,CACT,YAAYC,EAAO,CAAC,EAAG,CACnB,KAAK,OAAUA,EAAK,QAAU,CAAC,EAC/B,KAAK,QAAU,CAAC,CACpB,CAGA,OAAQ,CAEJ,OAAO,OAAO,KAAK,KAAK,MAAM,EACzB,KAAK,CAACC,EAAEC,IAAMA,EAAE,OAASD,EAAE,MAAM,EACjC,IAAKE,IACK,CACH,KAAM,IAAI,OAAO,IAAMA,EAAK,QAAQ,YAAa,WAAW,EAAI,GAAG,EACnE,GAAI,KAAK,OAAOA,CAAI,CACxB,EACH,CACT,CAEA,OAAO,OAAOC,EAAG,CAEb,OAAOA,EACD,KAAK,MAAM,KAAQA,EAAE,QAAQ,KAAM,KAAO,EAAE,QAAQ,KAAM,KAAO,EAAI,KAAO,SAAUC,EAAKC,EAAO,CAAE,OAAOD,IAAQ,GAAKC,EAAQ,mBAAmBA,CAAK,CAAE,CAAC,EAC3J,CAAC,CACX,CAEA,IAAIC,EAAOC,EAAI,CACX,KAAK,OAAOD,CAAK,EAAIC,CACzB,CAEA,OAAOD,EAAO,CACV,OAAO,KAAK,OAAOA,CAAK,CAC5B,CAEA,MAAME,EAAM,CAER,MAAMC,EAAUD,EAAK,QAAQ,IAAK,EAAE,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,EAGnDE,EAAKZ,EAAO,OAAOU,EAAK,MAAM,GAAG,EAAE,CAAC,CAAC,EAG3C,OAAIC,EAAQ,OAAS,GAAKA,EAAQ,SAAS,GAAG,EACnC,CAACA,EAAQ,MAAM,EAAG,EAAE,EAAGC,CAAE,EAG7B,CAACD,EAASC,CAAE,CACvB,CAEA,MAAMF,EAAM,CAERA,EAAO,KAAK,MAAMA,GAAQ,OAAO,SAAS,IAAI,EAC9C,MAAMG,EAAOH,EAAK,CAAC,EACbE,EAAOF,EAAK,CAAC,EAGnB,GAAKG,EAAK,WAAW,GAAG,EAGxB,SAASC,EAAI,EAAGC,EAAI,KAAK,QAAQ,OAAQD,EAAIC,EAAGD,IAAK,CAEjD,MAAME,EAAQH,EAAK,MAAM,KAAK,QAAQC,CAAC,EAAE,IAAI,GAAK,GAElD,GAAIE,EACA,OAAO,KAAK,QAAQF,CAAC,EAAE,GAAGE,EAAM,MAAM,CAAC,EAAGJ,CAAE,CAEpD,CAEA,MAAO,GACX,CAEA,OAAQ,CAEJ,KAAK,QAAU,KAAK,MAAM,EAE1B,OAAO,iBAAiB,aAAeK,IACnCA,EAAE,eAAe,EACV,KAAK,MAAM,EACrB,EAGD,KAAK,MAAM,CACf,CACJ,CAEA,eAAejB",
  "names": ["Routes", "opts", "a", "b", "path", "q", "key", "value", "route", "cb", "link", "cleaned", "qs", "goto", "i", "l", "found", "e"]
}
